var D=Object.defineProperty;var E=(n,t,r)=>t in n?D(n,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[t]=r;var o=(n,t,r)=>(E(n,typeof t!="symbol"?t+"":t,r),r);import{u as y,l as U,r as m}from"./index.bb007ed4.js";import{H as c,A as b}from"./index.e92490f7.js";import{m as v}from"./mitt.550594b0.js";import{A as f}from"./ApiService.4824f49b.js";class h{constructor(t){o(this,"id");o(this,"userId");o(this,"name");o(this,"phone");o(this,"address");o(this,"about");this.id=t.id,this.userId=t.userId,this.name=t.name,this.phone=t.phone,this.address=t.address,this.about=t.about}static get Empty(){return new h({})}getUpdate(){return{name:this.name,phone:this.phone,address:this.address,about:this.about}}}var p=(n=>(n.FETCHED="FETCHED",n.UPDATED="UPDATED",n.DELETED="DELETED",n))(p||{});class w{constructor(t=null,r=null){o(this,"userId","");o(this,"id",null);o(this,"emitter",v());this.setup(t,r)}setupUserId(t){var u;if(t){this.userId=t;return}const i=(u=y().$state.data)==null?void 0:u.id;if(i){this.userId=i;return}}setupId(t){this.id=t}setup(t,r=null){this.setupUserId(t),this.setupId(r)}async fetch(){const t=`users/${this.userId}/info`,r=f.abortableRequest({method:"get",url:t}),i=r.requestPromise.then(u=>{const a=u.status,e=u.data;if(a===c.Ok&&e){const s=new h(e);return this.emitter.emit("FETCHED",s),{status:a,data:s}}return{status:a,data:null}}).catch(u=>{if(u instanceof b&&u.response){const a=u.response.status,e=u.response.data;switch(a){case c.Forbidden:break;case c.NotFound:break}return{status:a,data:e!=null?e:null}}return null});return{abort:r.abort,apiPromise:i}}async put(t){if(!this.userId||!this.id)throw new Error("Data must be fetched before update!");const r=`users/${this.userId}/info/${this.id}`,i=f.abortableRequest({method:"put",url:r,data:t}),u=i.requestPromise.then(a=>{const e=a.status,s=a.data;if((e===c.Ok||e===c.Created)&&s){const d=new h(s);return this.emitter.emit("UPDATED",d),{status:e,data:d}}return{status:e,data:null}}).catch(a=>{if(a instanceof b&&a.response){const e=a.response.status,s=a.response.data;switch(e){case c.Forbidden:break;case c.Conflict:break}return{status:e,data:s!=null?s:null}}return null});return{abort:i.abort,apiPromise:u}}async clear(){return this.put(h.Empty)}}const k=U("user_info",()=>{const n=m(null),t=m(null),r=m(null),i=new w;function u(){n.value=null}function a(e=null,s=null){t.value=e,r.value=s,i.setup(e,s)}return i.emitter.on(p.FETCHED,e=>{var d,l;const s=e;n.value=s,a((d=s.userId)!=null?d:null,(l=s.id)!=null?l:null)}),i.emitter.on(p.UPDATED,e=>{var d,l;const s=e;n.value=s,a((d=s.userId)!=null?d:null,(l=s.id)!=null?l:null)}),i.emitter.on(p.DELETED,e=>{const s=e;n.value=s}),{data:n,api:i,clear:u,setKeys:a}});export{h as U,k as u};
