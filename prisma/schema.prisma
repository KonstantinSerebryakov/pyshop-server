// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  // output   = "../../../node_modules/@prisma/client/pyshop"
  output   = "../node_modules/@prisma/client/pyshop"
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @unique @default(cuid())
  type          String          @default("classic")
  email         String          @unique
  passwordHash  String?
  userInfo      UserInfo?
  refreshTokens RefreshTokens[] @ignore

  createdAt DateTime @default(now())
  // typeId        Int            @default(0)
  // userType      UserType       @relation(fields: [typeId], references: [id]) @ignore

  @@index(fields: [email(sort: Asc)])
}

// model UserType {
//   id   Int    @id @unique @default(autoincrement())
//   name String @unique
//   // user User[] @ignore
// }

model UserInfo {
  id     String @id @unique @default(cuid())
  userId String @unique

  name    String?
  phone   String?
  address String?
  about   String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) @ignore
}

model RefreshTokens {
  id       String @id @unique @default(cuid())
  deviceId String
  userId   String

  token     String
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) @ignore

  // Note: updated/created mismatch:
  // https://github.com/prisma/prisma/issues/12572
  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
  @@unique([deviceId, userId])
  @@index(fields: [userId, updatedAt(sort: Asc)])
}
